
local Item = {}

for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
    if v:IsA "MeshPart" then
        if not table.find(Item, tostring(v)) then
            table.insert(Item, tostring(v))
        end
    end
end

local Location = {}

for i, v in pairs(game:GetService("Workspace").Locations:GetChildren()) do
    if v:IsA "Part" then
        if not table.find(Location, tostring(v)) then
            table.insert(Location, tostring(v))
        end
    end
end

local TweenService  = game:GetService("TweenService")
local noclipE       = false
local antifall      = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end

local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end


local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local X = Material.Load({
    Title = "Keybrew Hub | Bloodlines",
    Style = 3,
    SizeX = 300,
    SizeY = 350,
    Theme = "Light",
    ColorOverrides = {
        MainFrame = Color3.fromRGB(0,0,0),
        Toggle = Color3.fromRGB(124,37,255),
        ToggleAccent = Color3.fromRGB(255,255,255), 
        Dropdown = Color3.fromRGB(124,37,255),
		DropdownAccent = Color3.fromRGB(255,255,255),
        Slider = Color3.fromRGB(124,37,255),
		SliderAccent = Color3.fromRGB(255,255,255),
        NavBarAccent = Color3.fromRGB(0,0,0),
        Content = Color3.fromRGB(0,0,0),
    }
})

local Y = X.New({
    Title = "Main"
})

local L = X.New({
    Title = "Instant Teleports"
})



local B = X.New({
    Title = "Misc"
})

local Cred = X.New({
    Title = "Credits"
})
    Cred.Button({
    Text = "Copy Discord UyuSF4fPC9",
    Callback = function()
        setclipboard("https://discord.gg/UyuSF4fPC9")
        toclipboard("https://discord.gg/UyuSF4fPC9")
    end,
})
Y.Toggle({
    Text = "Autopick drops",
    Callback = function(Value)
        a = Value
        while a do task.wait()
            pcall(function()
        for i, v in next, workspace:GetDescendants() do
            if v:IsA("ClickDetector") then
                fireclickdetector(v)
                wait(1)
            end
            end
        end)
        end    
    end,
    Enabled = false
})

local S = Y.Dropdown({
    Text = "Select Item Spawn",
    Callback = function(Value)
        getgenv().item = Value
    end,
    Options = Item
})

local function getITEM()
    local dist, thing = math.huge
    for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
        if v:IsA "MeshPart" and v.Name == item then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end

Y.Button({
    Text = "Tween to Item Spawn",
    Callback = function()
        moveto(getITEM().CFrame + Vector3.new(0,0,0), tonumber(100))
    end,
    Menu = {
        Information = function(self)
            X.Banner({
                Text = "This takes you to a possible spawn location of item."
            })
        end
    }
})
Y.Button(
    {
        Text = "Refresh Items",
        Callback = function()
            table.clear(Item)
            for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
                if v:IsA "MeshPart" then
                    if not table.find(Item, tostring(v)) then
                    table.insert(Item, tostring(v))
                    S:SetOptions(Item)
                    end
                end
            end
        end,
    }
)
Y.Dropdown({
    Text = "Select Location",
    Callback = function(Value)
        getgenv().locale = Value
    end,
    Options = Location
})

Y.Button({
    Text = "Tween to Location",
    Callback = function()
        moveto(game:GetService("Workspace").Locations[locale].CFrame + Vector3.new(0,0,0), tonumber(100))
    end,
})

Y.Button({
    Text = "Tween to Training Instructor",
    Callback = function()
        moveto(game:GetService("Workspace")["Training Instructor"].Torso.CFrame + Vector3.new(0,0,0), tonumber(100))
    end,
})

Y.Button({
    Text = "Tween to Aki (Get Pin)",
    Callback = function()
        moveto(game:GetService("Workspace").Aki.Torso.CFrame + Vector3.new(0,0,0), tonumber(100))
    end,
})





local SS = L.Dropdown({
    Text = "Select Item Spawn",
    Callback = function(Value)
        getgenv().Ltem = Value
    end,
    Options = Item
})

local function getLTEM()
    local dist, thing = math.huge
    for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
        if v:IsA "MeshPart" and v.Name == Ltem then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end

L.Button({
    Text = "Tp to Item Spawn",
    Callback = function()
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getLTEM().CFrame + Vector3.new(0,0,0)
    end,
    Menu = {
        Information = function(self)
            X.Banner({
                Text = "This takes you to a possible spawn location of item."
            })
        end
    }
})
L.Button(
    {
        Text = "Refresh Items",
        Callback = function()
            table.clear(Item)
            for i, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
                if v:IsA "MeshPart" then
                    if not table.find(Item, tostring(v)) then
                    table.insert(Item, tostring(v))
                    SS:SetOptions(Item)
                    end
                end
            end
        end,
    }
)
L.Dropdown({
    Text = "Select Location",
    Callback = function(Value)
        getgenv().locale = Value
    end,
    Options = Location
})

L.Button({
    Text = "Tp to Location",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Locations[locale].CFrame + Vector3.new(0,0,0)
    end,
})

L.Button({
    Text = "Tp to Training Instructor",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Training Instructor"].Torso.CFrame + Vector3.new(0,0,0)
    end,
})

L.Button({
    Text = "Tp to Aki (Get Pin)",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Aki.Torso.CFrame + Vector3.new(0,0,0)
    end,
})


local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/WhiteMan420/bub/main/chub"))()
B.Toggle({
    Text = "Toggle ESP",
    Callback = function(d)
        ESP:Toggle(d)


    end,
    Enabled = false
})



B.Toggle({
    Text = "Toggle Players",
    Callback = function(d)
        ESP.Players = d

    end,
    Enabled = false
})
B.Toggle({
    Text = "Toggle Boxes",
    Callback = function(d)
        ESP.Boxes = d

    end,
    Enabled = false
})


B.Slider(
    {
        Text = "WalkSpeed",
        Callback = function(warthog)
            getgenv().speed = warthog
        end,
        Min = 1,
        Max = 500,
        Def = 50
    }
)
B.Toggle(
    {
        Text = "Toggle",
        Callback = function(g)
            gg = g
            while gg do
                task.wait()
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
            end
        end,
        Enabled = false
    }
)

B.Button({
    Text = "Server hop",
    Callback = function()
        local module = loadstring(game:HttpGet"https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua")()

        module:Teleport(game.PlaceId)
    end,
})


