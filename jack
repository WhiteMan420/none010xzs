local Name = "Arsenal.txt"

Des = {}
if makefolder then
    makefolder("KB Hub")
end

local Settings

if
    not pcall(
        function()
            readfile("KB Hub//" .. Name)
        end
    )
 then
    writefile("KB Hub//" .. Name, game:service "HttpService":JSONEncode(Des))
end

Settings = game:service "HttpService":JSONDecode(readfile("KB Hub//" .. Name))

local function Save()
    writefile("KB Hub//" .. Name, game:service "HttpService":JSONEncode(Settings))
end

function getUserRole(i, v)
    return i:GetRoleInGroup(v)
end
game.Players.PlayerAdded:Connect(
    function(v)
        if
            getUserRole(v, 2613928) == "Game Moderators" or getUserRole(v, 2613928) == "Interns" or
                getUserRole(v, 2613928) == "Contractors" or
                getUserRole(v, 2613928) == "Contributors" or
                getUserRole(v, 2613928) == "Beloved" or
                getUserRole(v, 2613928) == "Main Developers" or
                getUserRole(v, 2613928) == "Founder/Main Developer"
         then
            local PlaceID = game.PlaceId
            local AllIDs = {}
            local foundAnything = ""
            local actualHour = os.date("!*t").hour
            local Deleted = false
            function TPReturner()
                local Site
                if foundAnything == "" then
                    Site =
                        game.HttpService:JSONDecode(
                        game:HttpGet(
                            "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                        )
                    )
                else
                    Site =
                        game.HttpService:JSONDecode(
                        game:HttpGet(
                            "https://games.roblox.com/v1/games/" ..
                                PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
                        )
                    )
                end
                local ID = ""
                if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                    foundAnything = Site.nextPageCursor
                end
                local num = 0
                for i, v in pairs(Site.data) do
                    local Possible = true
                    ID = tostring(v.id)
                    if tonumber(v.maxPlayers) > tonumber(v.playing) then
                        for _, Existing in pairs(AllIDs) do
                            if num ~= 0 then
                                if ID == tostring(Existing) then
                                    Possible = false
                                end
                            else
                                if tonumber(actualHour) ~= tonumber(Existing) then
                                    local delFile =
                                        pcall(
                                        function()
                                            delfile("NotSameServers.json")
                                            AllIDs = {}
                                            table.insert(AllIDs, actualHour)
                                        end
                                    )
                                end
                            end
                            num = num + 1
                        end
                        if Possible == true then
                            table.insert(AllIDs, ID)
                            wait()
                            pcall(
                                function()
                                    writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
                                    wait()
                                    game:GetService("TeleportService"):TeleportToPlaceInstance(
                                        PlaceID,
                                        ID,
                                        game.Players.LocalPlayer
                                    )
                                end
                            )
                            wait(4)
                        end
                    end
                end
            end

            function Teleport()
                while wait() do
                    pcall(
                        function()
                            TPReturner()
                            if foundAnything ~= "" then
                                TPReturner()
                            end
                        end
                    )
                end
            end

            -- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
            Teleport() --CharWars
        end
    end
)


local function Nope()
    game.Players.LocalPlayer.PlayerGui.Menew.Enabled = false
    game.Players.LocalPlayer.PlayerGui.GUI.Enabled = true
    game.Players.LocalPlayer.PlayerGui.GUI.TeamSelection.Visible = false
    game.Players.LocalPlayer.PlayerGui.GUI.BottomFrame.Visible = false
    game.Players.LocalPlayer.PlayerGui.GUI.Interface.Visible = true
end
local function Spawn()
    repeat
        wait()
    until not game:GetService("ReplicatedStorage").wkspc.Status.RoundOver.Value == true
    wait(1)
    game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("TBC")
    game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
    Nope()
    wait(1)
    if game.Players.LocalPlayer.Status.Team.Value == "Spectator" then
        game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("TBC")
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
        Nope()
    end
    wait(1)
    if game.Players.LocalPlayer.Status.Team.Value == "Spectator" then
        game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("TRC")
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
        Nope()
    end
    wait(1)
    if game.Players.LocalPlayer.Status.Team.Value == "Spectator" then
        game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("TYC")
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
        Nope()
    end
    wait(1)
    if game.Players.LocalPlayer.Status.Team.Value == "Spectator" then
        game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("TGC")
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
        Nope()
    end
    wait(1)
    if game.Players.LocalPlayer.Status.Team.Value == "Spectator" then
        game:GetService("ReplicatedStorage").Events.JoinTeam:FireServer("Random")
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
        Nope()
    end
end
if hookmetamethod then

local OldNameCall
OldNameCall = hookmetamethod(game, "__newindex", function(A, B, ...)
    if not checkcaller()  and (B == "WalkSpeed" or B == "JumpPower") then
        return 23
    end
    return OldNameCall(A, B, ...)
end)
end
game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = 23
game.Players.LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = 16
game.Players.LocalPlayer.CharacterAdded:Connect(
    function()
        repeat
            wait()
        until game.Players.LocalPlayer.Character
        wait(3)
        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = 23
        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = 16
    end
)

local Circle = Drawing.new("Circle")
Circle.Color = Color3.fromRGB(22, 13, 56)
Circle.Thickness = 1
Circle.Radius = 250
Circle.Visible = false 
Circle.NumSides = 1000
Circle.Filled = false
Circle.Transparency = 1

game:GetService("RunService").RenderStepped:Connect(
    function()
        local Mouse = game:GetService("UserInputService"):GetMouseLocation()
        Circle.Position = Vector2.new(Mouse.X, Mouse.Y)
    end
)

Settings.Aimbot = {
    FreeForAll = false,
    WallCheck = false,
    Enabled = false,
    FOV = 250
}
local Shoot = false

function FreeForAll(v)
    if Settings.Aimbot.FreeForAll == false or Settings.T.FreeForAll == false then
        if game.Players.LocalPlayer.Team == v.Team then
            return false
        else
            return true
        end
    else
        return true
    end
end

function NotObstructing(i, v)
    if Settings.Aimbot.WallCheck then
        c = workspace.CurrentCamera.CFrame.p
        a = Ray.new(c, i - c)
        f = workspace:FindPartOnRayWithIgnoreList(a, v)
        return f == nil
    else
        return true
    end
end
game:GetService("UserInputService").InputBegan:Connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 then
            Shoot = true
        end
    end
)

game:GetService("UserInputService").InputEnded:Connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 then
            Shoot = false
        end
    end
)

function GetClosestToCuror()
    Closest = math.huge
    Target = nil
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if FreeForAll(v) then
            if
                v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and
                    v.Character:FindFirstChild("Humanoid") and
                    v.Character.Humanoid.Health ~= 0
             then
                Point, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                if
                    OnScreen and
                        NotObstructing(
                            v.Character.HumanoidRootPart.Position,
                            {game.Players.LocalPlayer.Character, v.Character}
                        )
                 then
                    Distance =
                        (Vector2.new(Point.X, Point.Y) -
                        Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y)).magnitude
                    if Distance <= Settings.Aimbot.FOV then
                        Closest = Distance
                        Target = v
                    end
                end
            end
        end
    end
    return Target
end

game:GetService("RunService").Stepped:connect(
    function()
        pcall(
            function()
                if Settings.Aimbot.Enabled == false or Shoot == false then
                    return
                end
                ClosestPlayer = GetClosestToCuror()
                if ClosestPlayer then
                    workspace.CurrentCamera.CFrame =
                        CFrame.new(workspace.CurrentCamera.CFrame.p, ClosestPlayer.Character[Settings.AimPart].CFrame.p)
                end
            end
        )
    end
)
Settings.T = {
    TeamCheck = false,
    Delay = 0.01,
    Enabled = false
}

local Aim = false
game:GetService("UserInputService").InputBegan:connect(
    function(v)
        if v.UserInputType == Enum.UserInputType.MouseButton2 and Settings.T.Enabled then
            Aim = true
            while Aim do
                wait()
                if
                    game:GetService("Players").LocalPlayer:GetMouse().Target and
                        game:GetService("Players"):FindFirstChild(
                            game:GetService("Players").LocalPlayer:GetMouse().Target.Parent.Name
                        )
                 then
                    local Person =
                        game:GetService("Players"):FindFirstChild(
                        game:GetService("Players").LocalPlayer:GetMouse().Target.Parent.Name
                    )
                    if Person.Team ~= game:GetService("Players").LocalPlayer.Team or not Settings.T.TeamCheck then
                        if Settings.T.Delay > 0 then
                            wait(0.01)
                        end
                        mouse1press()
                        wait()
                        mouse1release()
                    end
                end
                if not Settings.T.Enabled then
                    break
                end
            end
        end
    end
)

game:GetService("UserInputService").InputEnded:connect(
    function(v)
        if v.KeyCode == Enum.UserInputType.MouseButton2 and Settings.T.Enabled then
            Aim = false
        end
    end
)


local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()
local lp = game.Players.LocalPlayer
local X = Material.Load({
    Title = "Keybrew Hub | Arsenal",
    Style = 3,
    SizeX = 300,
    SizeY = 350,
    Theme = "Light",
    ColorOverrides = {
        MainFrame = Color3.fromRGB(0,0,0),
        Toggle = Color3.fromRGB(124,37,255),
        ToggleAccent = Color3.fromRGB(255,255,255), 
        Dropdown = Color3.fromRGB(124,37,255),
		DropdownAccent = Color3.fromRGB(255,255,255),
        Slider = Color3.fromRGB(124,37,255),
		SliderAccent = Color3.fromRGB(255,255,255),
        NavBarAccent = Color3.fromRGB(0,0,0),
        Content = Color3.fromRGB(0,0,0),
    }
})
local Main = X.New({
    Title = "Main"
})

local Main1 = X.New({
    Title = "More"
})
local Esp = X.New({
    Title = "ESP"
})
local Misc = X.New({
    Title = "Options"
})
local Cred = X.New({
    Title = "Credits"
})
    Cred.Button({
    Text = "Copy Discord UyuSF4fPC9",
    Callback = function()
        setclipboard("https://discord.gg/UyuSF4fPC9")
        toclipboard("https://discord.gg/UyuSF4fPC9")
    end,
})
    Main.Toggle({
    Text = "Aimbot",
    Callback = function(a)
            Settings.Aimbot.Enabled = a

    end,
    Enabled = false
})

    Main.Dropdown({
    Text = "Select Part",
    Callback = function(String)
        Settings.AimPart = String    end,
    Options = {
        "HumanoidRootPart",
        "Head",
        "UpperTorso",
        "LowerTorso",
        "Random"
    }
})
if Settings.AimPart == nil then
    Settings.AimPart = "HumanoidRootPart"
    end 
    Misc.Toggle({
    Text = "Free For All",Settings.Aimbot.FreeForAll,
    Callback = function(b)
        Settings.Aimbot.FreeForAll = b
        Settings.T.TeamCheck = Settings.Aimbot.FreeForAll

    end,
    Enabled = false


    
})
Misc.Toggle({
    Text = "Rage Mode",nil,
    Callback = function(c)
        Settings.AutoFarm = c


game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoFarm then
    if setfflag then 
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end 
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                if
                    game.Players.LocalPlayer.Character ~= nil and v ~= game.Players.LocalPlayer and
                        (v.TeamColor ~= game.Players.LocalPlayer.TeamColor or v.TeamColor == "Bright blue") and
                        v.Character ~= nil and
                        v.Character:FindFirstChild("Gun")
                 then
                    if
                        v ~= game.Players.LocalPlayer and v:FindFirstChild("NRPBS") and v.NRPBS.Health.Value > 0 and
                            v.Character and
                            v.Character:FindFirstChild("Head") and
                            v.Character:FindFirstChild("Hitbox")
                     then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            v.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                        workspace.CurrentCamera.CFrame =
                            CFrame.new(workspace.CurrentCamera.CFrame.p, v.Character.UpperTorso.CFrame.p)
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
                    end
                end
            end
        end
    end
)
spawn(
    function()
        while wait() and Settings.AutoFarm do
            Spawn()
        end
    end
)


    end,
    Enabled = false
})

Misc.Toggle({
    Text = "Triggerbot",Settings.T.Enabled,
    Callback = function(c)
        Settings.T.Enabled = c


    end,
    Enabled = false
})

Misc.Toggle({
    Text = "Wall Check",nil,
    Callback = function(d)
        Settings.Aimbot.WallCheck = d


    end,
    Enabled = false
})

Misc.Toggle({
    Text = "Rainbow Gun",Settings.RainBowGun,
    Callback = function(d)
        Settings.RainBowGun = d

game:GetService("RunService").RenderStepped:Connect(
    function()
        if Settings.RainBowGun then
            if game.Workspace.Camera:FindFirstChild("Arms") then
                for i, v in pairs(game.Workspace.Camera.Arms:GetChildren()) do 
                    if v.ClassName == "MeshPart" then
                        v.Color = Color3.fromHSV(tick()%5/5,1,1) 
                    end
                end
            end
        end
    end
)


    end,
    Enabled = false
})

Main.Toggle({
    Text = "Silent Aim",Settings.SilentAim,
    Callback = function(e)
        Settings.SilentAim = e
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
function ClosestPlayerToCurser()
    local MaxDistance, Closest = math.huge
    for i,v in pairs(Players.GetPlayers(Players)) do
        if v ~= LocalPlayer and v.Team ~= LocalPlayer.Team and v.Character then
            local H = v.Character.FindFirstChild(v.Character, "Head")
            if H then 
                local Pos, Vis = workspace.CurrentCamera.WorldToScreenPoint(workspace.CurrentCamera, H.Position)
                if Vis then
                    local A1, A2 = Vector2.new(Mouse.X, Mouse.Y), Vector2.new(Pos.X, Pos.Y)
                    local Dist = (A2 - A1).Magnitude
                    if Dist < MaxDistance and Dist <= 2500 then
                        MaxDistance = Dist
                        Closest = v
                    end
                end
            end
        end
    end
    return Closest
end
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(self,...)
    local Args = {...}
    if getnamecallmethod() == "FindPartOnRayWithIgnoreList" and not checkcaller() and Settings.SilentAim then
        local GivemeHead = ClosestPlayerToCurser()
        if GivemeHead and GivemeHead.Character and GivemeHead.Character.FindFirstChild(GivemeHead.Character, Settings.AimPart) then
            Args[1] = Ray.new(workspace.CurrentCamera.CFrame.Position, (GivemeHead.Character[Settings.AimPart].Position - workspace.CurrentCamera.CFrame.Position).Unit * 1000)
            return OldNameCall(self, unpack(Args))
        end
    end
    return OldNameCall(self, ...)
end)


    end,
    Enabled = false
})

Main1.Toggle({
    Text = "Auto Heal",Settings.AutoHeal,
    Callback = function(d)
        Settings.AutoHeal = d
        spawn(function()
        while Settings.AutoHeal do
            wait()
            pcall(
                function()
                    for i, v in pairs(game:GetService("Workspace").Debris:GetChildren()) do
                        if v.Name == "DeadHP" then
                            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        end
                    end
                end
            )
        end
        end)

    end,
    Enabled = false
})

Main1.Toggle({
    Text = "inf ammo",Settings.Infinite,
    Callback = function(d)
        Settings.Infinite = d
        game:GetService("RunService").Stepped:connect(
            function()
                pcall(
                    function()
                        if Settings.Infinite then
                            game:GetService("Players").LocalPlayer.PlayerGui.GUI.Client.Variables.ammocount.Value = 999
                            game:GetService("Players").LocalPlayer.PlayerGui.GUI.Client.Variables.ammocount2.Value = 999
                        end
                    end
                )
            end
        )

    end,
    Enabled = false
})

Main1.Toggle({
    Text = "Always Auto",Settings.Automtatic,
    Callback = function(d)
        Settings.Automtatic = d
        for _, v in pairs(game.ReplicatedStorage.Weapons:GetDescendants()) do
            if v.Name == "Auto" then
                if Settings.Automtatic then
                    v.Value = true -- always auto
                else
                    v.Value = false
                end
            end
        end

    end,
    Enabled = false
})

Main1.Toggle({
    Text = "Fast Fire",Settings.FireRate,
    Callback = function(d)
        Settings.FireRate = d
        for _, v in pairs(game.ReplicatedStorage.Weapons:GetDescendants()) do
            if v.Name == "FireRate" then
                if Settings.FireRate then
                    v.Value = 0.02 
                else
                    v.Value = 0.8
                end
            end
        end

    end,
    Enabled = false
})

Main1.Toggle({
    Text = "no recoil",Settings.Recoil,
    Callback = function(d)
        Settings.Recoil = d
        for i, v in pairs(game:GetService("ReplicatedStorage").Weapons:GetDescendants()) do
            if v.Name == "MaxSpread" or v.Name == "Spread" or v.Name == "RecoilControl" then
                if Settings.Recoil then
                    v.Value = 0 
                else
                    v.Value = 1
                end
            end
        end

    end,
    Enabled = false
})
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/WhiteMan420/bub/main/chub"))()

Esp.Toggle({
    Text = "Toggle ESP",Settings.Esp,Settings.PlayerEsp,Settings.Boxes,
    Callback = function(d)
        Settings.Esp = d
        ESP:Toggle(Settings.Esp)


    end,
    Enabled = false
})


Esp.Toggle({
    Text = "Toggle Players",Settings.PlayerEsp,
    Callback = function(d)
        Settings.PlayerEsp = d
        ESP.Players = Settings.PlayerEsp

    end,
    Enabled = false
})
Esp.Toggle({
    Text = "Toggle Boxes",Settings.Boxes,
    Callback = function(d)
        Settings.Boxes = d
        ESP.Boxes = Settings.Boxes

    end,
    Enabled = false
})
